@model AEOnline.Models.WebModels.CargaCombustible
@{
    ViewBag.Title = "CargarCombustible";

    Layout = "~/Views/Shared/_LayoutAdminFlota2.cshtml";

    string rol = "";

    if (Session["Rol"] != null)
    {
        rol += Session["Rol"].ToString();
    }

    if (rol != "AdminDeFlota")
    {
        Response.Redirect("~/Login/Index");
    }
}

<body class="bg-dark">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container">
            <div class="card card-register mx-auto mt-5">
                <div class="card-header"><strong>Registrando carga de combustible.</strong></div>
                <div class="card-body">
                    <form>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="form-row">
                                <div class="col-md-6">
                                    <p>Vehículo</p>
                                    @Html.DropDownList("VehiculoId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.VehiculoId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form-row">
                                <div class="col-md-6">
                                    <p>Fecha</p>
                                    @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @id = "fechapicker", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6">
                                    <p>Hora</p>
                                    @Html.EditorFor(model => model.Hora, new { htmlAttributes = new { @id = "horapicker", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Hora, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form-row">
                                <div class="col-md-6">
                                    <p>Rut de la estación</p>
                                    @Html.EditorFor(model => model.RutEstacion, new { htmlAttributes = new { @id = "fechapicker", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RutEstacion, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6">
                                    <p>Número de boleta</p>
                                    @Html.EditorFor(model => model.NumeroDeBoleta, new { htmlAttributes = new { @id = "horapicker", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NumeroDeBoleta, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form-row">
                                <div class="col-md-6">
                                    <p>Proveedor</p>
                                    @Html.DropDownList("ProveedorId", null, htmlAttributes: new { @class = "form-control" })
                                </div>       
                                <div class="col-md-6">
                                    <p>Cantidad de litros</p>
                                    @Html.EditorFor(model => model.CantidadLitros, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CantidadLitros, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="form-row">
                                <div class="col-md-6">
                                    <p>Costo unitario</p>
                                    @Html.EditorFor(model => model.CostoUnitario, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CostoUnitario, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6">
                                    <p>Kilometraje Actual</p>
                                    @Html.EditorFor(model => model.Kilometraje, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Kilometraje, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form-row">
                                <div class="col-md-6">
                                    <p>¿Estanque lleno?</p>
                                    @Html.EditorFor(model => model.EstanqueLleno, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EstanqueLleno, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Cargar combustible" class="btn btn-primary btn-block" />
                        </div>
                    </form>
                    <div class="text-center">
                        <a class="d-block small mt-3" href="@Url.Action("AdministrarAutos","AdminFlota2")"><< Regresar a la lista</a>
                    </div>
                </div>
            </div>
        </div>
    }


</body>


@section scripts{

    @*Referencias para usar TimePicker*@
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.2.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>


    <script>

        var $fecha = $("#fechapicker").datepicker({

            monthNames: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
            monthNamesShort: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
            dayNamesMin: ["Do", "Lu", "Ma", "Mi", "Ju", "Vi", "Sa"],
            dateFormat: 'dd-mm-yy',
            firstDay: 1,
            changeMonth: true,
            changeYear: true,
            maxDate: new Date(),
            showOn: "focus",
            buttonText: "Selección fecha"
        });

        var $hora = $("#horapicker").timepicker({

            timeFormat: "hh:mm TT",
            //hourGrid: 6,
            //minuteGrid: 10,
            hourMin: 0,
            hourMax: 23,
            minuteMax: 59,
            timeOnlyTitle: "Elije la hora",
            hourText: "Hora",
            minuteText: "Minuto",
            timeText: "",
            currentText: "Ahora",
            closeText: "Cerrar",
            onSelect: function (selected, evnt) {
                HoraCambiada();
            }
        });

    </script>

}