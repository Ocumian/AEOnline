@model AEOnline.Models.WebModels.CreacionMantencion
@{
    ViewBag.Title = "EditarMantencion";

    Layout = "~/Views/Shared/_LayoutAdminFlota2.cshtml";

    string rol = "";

    if (Session["Rol"] != null)
    {
        rol += Session["Rol"].ToString();
    }

    if (rol != "AdminDeFlota")
    {
        Response.Redirect("~/Login/Index");
    }
}

<body class="bg-dark">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.AutoId)
        <div class="container">
            <div class="card card-register mx-auto mt-5">
                <div class="card-header">Editando mantenición del vehículo: "@ViewBag.VehiculoNombre"</div>
                <div class="card-body">
                    <form>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="form-row">
                                <div class="col-md-6">
                                    <p>Fecha</p>
                                    @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @id = "fechapicker", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form-row">
                                <div class="col-md-6">
                                    <p>Kilometraje</p>
                                    @Html.EditorFor(model => model.Kilometraje, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Kilometraje, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6">
                                    <p>Tipo de mantenimiento</p>
                                    @Html.EnumDropDownListFor(model => model.TipoDeMantenimiento, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TipoDeMantenimiento, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="form-row">
                                <div class="col-md-6">
                                    <p>Proveedor</p>
                                    @Html.DropDownList("ProveedorId", null, htmlAttributes: new { @class = "form-control" })
                                </div>
                                <div class="col-md-6">
                                    <p>Servicios aplicados</p>
                                    @Html.DropDownList("ServiciosId", null, htmlAttributes: new { @class = "form-control", @id = "cmbServicios", @multiple = "true" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form-row">
                                <div class="col-md-6">
                                    <p>Costo</p>
                                    @Html.EditorFor(model => model.Costo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Costo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Aplicar mantención" class="btn btn-primary btn-block" />
                        </div>
                    </form>
                    <div class="text-center">
                        <a class="d-block small mt-3" href="@Url.Action("AdministrarMantenciones","AdminFlota2")"><< Regresar a la lista</a>
                    </div>
                </div>
            </div>
        </div>
    }


</body>


@section scripts{


    @*Referencias para usar TimePicker*@
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.2.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>


    @* Referencias Chosen *@
    <link href="~/Content/Chosen/chosen.min.css" rel="stylesheet" />
    <script src="~/Scripts/chosen.jquery.min.js"></script>

    <script>
        var $fecha = $("#fechapicker").datepicker({

            monthNames: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
            monthNamesShort: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
            dayNamesMin: ["Do", "Lu", "Ma", "Mi", "Ju", "Vi", "Sa"],
            dateFormat: 'dd-mm-yy',
            firstDay: 1,
            changeMonth: true,
            changeYear: true,
            maxDate: new Date(),
            showOn: "focus",
            buttonText: "Selección fecha"
        });

        var $servicios = $("#cmbServicios").chosen();

        InicializarServicios();

        //$(function () {
        //    $("#cmbServicios").chosen();
        //})

        function InicializarServicios()
        {
            var arrayServicios = [];
            @{ 
                foreach(int id in Model.ServiciosId)
                {
                    <text>
                    arrayServicios.push(@id);
                    </text>
                }
            }
            $("#cmbServicios").val(arrayServicios).trigger("chosen:updated");
        }

    </script>

}