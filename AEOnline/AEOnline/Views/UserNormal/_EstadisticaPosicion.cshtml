@model AEOnline.Models.WebModels.HistorialWeb

<head>

    @*Referencias para usar TimePicker*@
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

    <script src="~/Scripts/jquery-3.2.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>

</head>

<style>
    /* Always set the map height explicitly to define the size of the div
      * element that contains the map. */
    #map {
        height: 500px;
        width: 1200px;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
</style>

<h1>Historial de posición</h1>
<br />


<table class="table">
    <tr>
        <th>
            <strong>Desde:</strong><br />
            <input type="text" id="desdePicker" class="form-control" />
        </th>
        <th>
            <strong>Hasta:</strong><br />
            <input type="text" id="hastaPicker" class="form-control" />
        </th>
    </tr>
</table>
<div id="map"></div>
<br />


<script>

    var $rutaMapa;


    var $desde = $("#desdePicker").timepicker({

            timeFormat: "hh:mm:ss TT",
            hourGrid: 6,
            minuteGrid: 10,
            hourMin: 0,
            hourMax: 24,
            timeOnlyTitle: "Elije la hora",
            hourText: "Hora",
            minuteText: "Minuto",
            timeText: "",
            currentText: "Ahora",
            closeText: "Cerrar",
            onSelect: function (selected, evnt) {
                HoraCambiada();
            }
    });

    var $hasta = $("#hastaPicker").timepicker({

        timeFormat: "hh:mm:ss TT",
        hourGrid: 6,
        minuteGrid: 10,
        hourMin: 0,
        hourMax: 23,
        minuteMax:59,
        timeOnlyTitle: "Elije la hora",
        hourText: "Hora",
        minuteText: "Minuto",
        timeText: "",
        currentText: "Ahora",
        closeText: "Cerrar",
        onSelect: function (selected, evnt) {
            HoraCambiada();
        }
    });

    $desde.datepicker('setDate', new Date(2018,1,1,0,0,0));
    $hasta.datepicker('setDate', new Date(2018, 1, 1, 23, 59, 0));

    var $master = $("#Fecha").datepicker({

        monthNames: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
        monthNamesShort: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
        dayNamesMin: ["Do", "Lu", "Ma", "Mi", "Ju", "Vi", "Sa"],
        dateFormat: 'dd-mm-yy',
        firstDay: 1,
        changeMonth: true,
        changeYear: true,
        maxDate: new Date(),
        showOn: "both",
        buttonText: "Selección fecha"
    });


    function HoraCambiada() {

        var fechaDesde = $desde.datepicker('getDate');
        var fechaHasta = $hasta.datepicker('getDate');

        $.ajax({
            type: "GET",
            url: "/UserNormal/getPosicionesFiltradas",   
            data:
            {
                horaDesde: (@Model.FechaMostrar.Day + "/" + @Model.FechaMostrar.Month + "/" + @Model.FechaMostrar.Year + " " + fechaDesde.getHours() + ":" + fechaDesde.getMinutes() + ":" + fechaDesde.getSeconds()),
                horaHasta: (@Model.FechaMostrar.Day + "/" + @Model.FechaMostrar.Month + "/" + @Model.FechaMostrar.Year + " " + fechaHasta.getHours() + ":" + fechaHasta.getMinutes() + ":" + fechaHasta.getSeconds()),
                idAuto: "@Model.IdAuto"
            },

            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                var array = JSON.parse(result.respuesta);
                //alert(array[0].Latitud);
                var arrayLenght = Object.keys(array).length;
                var puntosRuta = [];

                for (var i = 0; i < arrayLenght; i++)
                {
                    var punto = new google.maps.LatLng(array[i].Latitud, array[i].Longitud);
                    puntosRuta.push(punto);
                }

                //alert(puntosRuta);

                //alert(puntosRuta.values());
                $rutaMapa.setMap(null);
                $rutaMapa.setPath(puntosRuta);
                $rutaMapa.setMap(map);

            },
            error: function (response) {
                //debugger;
                alert('eror');
            }
        });
    }


    var map;

    function initMap() {

        map = new google.maps.Map(document.getElementById('map'), {
            center:
            { lat: @Model.historialesPosicion[0].Latitud.ToString().Replace(',', '.') , lng: @Model.historialesPosicion[0].Longitud.ToString().Replace(',', '.') },
            //lat: -40.574351, lng: -73.131871 Osorno
            zoom: 14
        });

        var coordenadasRuta = [
        @{
            List<AEOnline.Models.HistorialPosicion> historiales = Model.historialesPosicion.OrderBy(h => h.FechaHora).ToList();
            for (int i = 0; i < historiales.Count; i++)
            {
                <text>
            { lat: @historiales[i].Latitud.ToString().Replace(',','.') , lng: @historiales[i].Longitud.ToString().Replace(',', '.') }
                </text>
                if(i < historiales.Count - 1)
                {
                    <text>
            ,
                    </text>
                }
            }
        }
        ];

        $rutaMapa = new google.maps.Polyline({
            path: coordenadasRuta,
            geodesic: true,
            strokeColor: '#FF0000',
            strokeOpacity: 1.0,
            strokeWeight: 2
        });

        $rutaMapa.setMap(map);

    }



</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDu0DHkQkZ-iHDrZr-ztGThEbUyUvgGPfM&callback=initMap"
        async defer></script>
